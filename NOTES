## 1 installing Redux

- npm i redux
- npm i redux react-redux

/////////////////////////////////////////////////////////////////////////////////////////////////////////

## 2 Creating/Providing Redux Store for React

- "store" (Folder created)
  => "index.js" (file inside folder)
  => Using "configureStore"

-------------------------------------------------------- import { configureStore } from "@reduxjs/toolkit";
Replace "createStore"(deprecated) with "configureStore"

- "index.js"
  => Importing "store" data (Highest level of the application)

-------------------------------------------------------- import store from './storeLocation'
-------------------------------------------------------- import {Provider} from 'react-redux'
(Providing the Store)
<Provider store={store}> <App /> </Provider>

/////////////////////////////////////////////////////////////////////////////////////////////////////////

## 3 Using Redux data in other components

- "Counter.js"
  => useSelector => to get "store" data

-------------------------------------------------------- import { useSelector } from "react-redux"
redux method to get "store" data

/////////////////////////////////////////////////////////////////////////////////////////////////////////

## 4 Dispatching actions from another component

- "Counter.js"
  => using "useDispatch"

-------------------------------------------------------- import { useDispatch } from "react-redux"
const dispatch = useDispatch()
=> Call dispatch inside another function
=> dispatch({ type: })

/////////////////////////////////////////////////////////////////////////////////////////////////////////

## 5 Redux with Class-Based Components

- "Counter.js"
  => Created a class Component
  => Using "connect()"

-------------------------------------------------------- import {Component} from 'react'
to crease class-based component

-------------------------------------------------------- import { connect } from "react-redux"
to use redux in class-based components

**\*\*\*** REMEMBER **\*\*\***
In class-components functions/methods
=> in the JSX, use ".bind(this)" to the functions
